'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var application = require('tns-core-modules/application');
var dom = require('./dom');

function svelteNativeNoFrame(rootElement, data) {
    dom.initializeDom();
    return new Promise((resolve, reject) => {
        let elementInstance;
        const buildElement = () => {
            let frag = dom.createElement('fragment');
            elementInstance = new rootElement({
                target: frag,
                props: data || {}
            });
            return frag.firstChild.nativeElement;
        };
        //wait for launch before returning
        application.on(application.launchEvent, () => {
            console.log("Application Launched");
            resolve(elementInstance);
        });
        try {
            application.run({ create: buildElement });
        }
        catch (e) {
            reject(e);
        }
    });
}
function svelteNative(startPage, data) {
    dom.initializeDom();
    //setup a frame so we always have somewhere to hang our css
    let rootFrame = dom.createElement('frame');
    rootFrame.setAttribute("id", "app-root-frame");
    let pageInstance = dom.navigate({
        page: startPage,
        props: data || {},
        frame: rootFrame
    });
    return new Promise((resolve, reject) => {
        //wait for launch
        application.on(application.launchEvent, () => {
            console.log("Application Launched");
            resolve(pageInstance);
        });
        try {
            application.run({ create: () => rootFrame.nativeView });
        }
        catch (e) {
            reject(e);
        }
    });
}
// Svelte looks to see if window is undefined in order to determine if it is running on the client or in SSR.
// window is undefined until initializeDom is called. We will set it to a temporary value here and overwrite it in intializedom.
global.window = { env: "Svelte Native" };

Object.defineProperty(exports, 'DomTraceCategory', {
    enumerable: true,
    get: function () {
        return dom.DomTraceCategory;
    }
});
Object.defineProperty(exports, 'closeModal', {
    enumerable: true,
    get: function () {
        return dom.closeModal;
    }
});
Object.defineProperty(exports, 'goBack', {
    enumerable: true,
    get: function () {
        return dom.goBack;
    }
});
Object.defineProperty(exports, 'initializeDom', {
    enumerable: true,
    get: function () {
        return dom.initializeDom;
    }
});
Object.defineProperty(exports, 'navigate', {
    enumerable: true,
    get: function () {
        return dom.navigate;
    }
});
Object.defineProperty(exports, 'showModal', {
    enumerable: true,
    get: function () {
        return dom.showModal;
    }
});
exports.svelteNative = svelteNative;
exports.svelteNativeNoFrame = svelteNativeNoFrame;
