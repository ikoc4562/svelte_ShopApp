'use strict';

var dom = require('svelte-native/dom');
var nativescriptUiDataform = require('nativescript-ui-dataform');

class RadDataFormElement extends dom.NativeViewElementNode {
    constructor() {
        super('radDataForm', nativescriptUiDataform.RadDataForm, null, { "groups": dom.NativeElementPropType.Array, "properties": dom.NativeElementPropType.Array });
    }
    getPropertyByName(prop) {
        return this.nativeView.getPropertyByName(prop);
    }
    notifyValidated(prop, validated) {
        return this.nativeView.notifyValidated(prop, validated);
    }
    commitAll() {
        return this.nativeView.commitAll();
    }
    validateAll() {
        return this.nativeView.validateAll();
    }
    static register() {
        const registerConfigElement = (tag, native, setsParentProp = null, propconfig = {}) => dom.registerNativeConfigElement(tag, () => native, setsParentProp, propconfig);
        registerConfigElement('DataFormStackLayout', nativescriptUiDataform.DataFormStackLayout, "layout");
        registerConfigElement('DataFormGridLayout', nativescriptUiDataform.DataFormGridLayout, "layout");
        registerConfigElement('EntityProperty', nativescriptUiDataform.EntityProperty, "properties", { "validators": dom.NativeElementPropType.Array });
        registerConfigElement('PropertyEditor', nativescriptUiDataform.PropertyEditor, "editor");
        registerConfigElement('PropertyEditorParams', nativescriptUiDataform.PropertyEditorParams, "params");
        registerConfigElement('PropertyEditorStyle', nativescriptUiDataform.PropertyEditorStyle, "propertyEditorStyle");
        registerConfigElement('PropertyGroup', nativescriptUiDataform.PropertyGroup, "groups", { "properties": dom.NativeElementPropType.Array });
        registerConfigElement('EmailValidator', nativescriptUiDataform.EmailValidator, "validators");
        registerConfigElement('IsTrueValidator', nativescriptUiDataform.IsTrueValidator, "validators");
        registerConfigElement('NonEmptyValidator', nativescriptUiDataform.NonEmptyValidator, "validators");
        registerConfigElement('MaximumLengthValidator', nativescriptUiDataform.MaximumLengthValidator, "validators");
        registerConfigElement('MinimumLengthValidator', nativescriptUiDataform.MinimumLengthValidator, "validators");
        registerConfigElement('PhoneValidator', nativescriptUiDataform.PhoneValidator, "validators");
        registerConfigElement('RangeValidator', nativescriptUiDataform.RangeValidator, "validators");
        registerConfigElement('RegExValidator', nativescriptUiDataform.RegExValidator, "validators");
        dom.registerElement('radDataForm', () => new RadDataFormElement());
    }
}

module.exports = RadDataFormElement;
